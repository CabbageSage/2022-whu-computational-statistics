knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages(c("blob", "broom", "car", "cli", "crayon", "dplyr", "fansi", "gert", "ggplot2", "haven", "knitr", "Lahman", "lme4", "lmtest", "magrittr", "maptools", "MASS", "Matrix", "mgcv", "nlme", "plyr", "processx", "ps", "quantreg", "RColorBrewer", "Rcpp", "RcppEigen", "readxl", "rlang", "rmarkdown", "rprojroot", "sass", "scales", "sp", "survival", "testthat", "tibble", "tinytex", "tzdb", "uuid", "vctrs", "waldo", "xfun", "zoo"))
install.packages(c("blob", "broom", "car", "cli", "crayon", "dplyr", "fansi", "gert", "ggplot2", "haven", "knitr", "Lahman", "lme4", "lmtest", "magrittr", "maptools", "MASS", "Matrix", "mgcv", "nlme", "plyr", "processx", "ps", "quantreg", "RColorBrewer", "Rcpp", "RcppEigen", "readxl", "rlang", "rmarkdown", "rprojroot", "sass", "scales", "sp", "survival", "testthat", "tibble", "tinytex", "tzdb", "uuid", "vctrs", "waldo", "xfun", "zoo"))
install.packages(c("blob", "broom", "car", "cli", "crayon", "dplyr", "fansi", "gert", "ggplot2", "haven", "knitr", "Lahman", "lme4", "lmtest", "magrittr", "maptools", "MASS", "Matrix", "mgcv", "nlme", "plyr", "processx", "ps", "quantreg", "RColorBrewer", "Rcpp", "RcppEigen", "readxl", "rlang", "rmarkdown", "rprojroot", "sass", "scales", "sp", "survival", "testthat", "tibble", "tinytex", "tzdb", "uuid", "vctrs", "waldo", "xfun", "zoo"))
install.packages(c("blob", "broom", "car", "cli", "crayon", "dplyr", "fansi", "gert", "ggplot2", "haven", "knitr", "Lahman", "lme4", "lmtest", "magrittr", "maptools", "MASS", "Matrix", "mgcv", "nlme", "plyr", "processx", "ps", "quantreg", "RColorBrewer", "Rcpp", "RcppEigen", "readxl", "rlang", "rmarkdown", "rprojroot", "sass", "scales", "sp", "survival", "testthat", "tibble", "tinytex", "tzdb", "uuid", "vctrs", "waldo", "xfun", "zoo"))
install.packages(c("dplyr", "ggplot2", "knitr", "Rcpp", "readxl", "rmarkdown"))
old.packages()
update.packages()
update.packages()
old.packages()
install.packages(c("dplyr", "magrittr", "plyr"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
reticulate::repl_python()
quit
print("Hello world")
print("Hello world")
reticulate::repl_python()
print("Hello world")
import pandas as pd
quit
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
example("subset")
boot <- bootstrap(mtcars, 100)
boot
boot$strap
models <- map(boot$strap, ~ lm(mpg ~ wt, data = .))
models
tidied <- map_df(models, broom::tidy, .id = "id")
tidied
hist(subset(tidied, term == "wt")$estimate)
subset(tidied, term == "wt")
tidied[tidied=="wt"]
tidied[[tidied=="wt"]]
tidied %>% select(tidied=="wt")
tidied %>% filter(tidied=="wt")
tidied %>% filter(term=="wt")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
jackknife <- bootstrap::jackknife
data_law <- bootstrap::law
data_law <- bootstrap()
data_law <- bootstrap::law
n <- 10
data_law <- bootstrap(n)
data_law <- bootstrap(n)
data_law <- bootstrap::law
n <- 10
data_law <- bootstrap(n)
data_law <- bootstrap::law
n <- 10
data_law <- bootstrap(n)
data_law <- bootstrap::law
n <- 10
data_law <- bootstrap(10)
data_law <- bootstrap::law
n <- 10
data_law <- bootstrap()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
jackknife <- bootstrap::jackknife
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
jackknife <- bootstrap::jackknife
data_law <- bootstrap::law
n <- 10
data_law <- bootstrap()
data_law <- bootstrap::law
n <- 10
data_law <- bootstrap(n)
data_law <- bootstrap::law
n <- 10
data_law %>% bootstrap(n)
data_law <- bootstrap::law
n <- 10
data_law %>%
bootstrap(n) %>%
jackknife()
data_law <- bootstrap::law
n <- 10
data_law %>%
bootstrap(n) %>%
jackknife(sd)
data_law <- bootstrap::law
n <- 10
data_law %>%
bootstrap(n) %>%
map_df(broom::tidy, .id="id") %>%
jackknife(sd)
ata_law %>%
bootstrap(n) %>%
map_df(broom::tidy, .id="id")
data_law %>%
bootstrap(n) %>%
map_df(broom::tidy, .id="id") %>%
data_law %>%
bootstrap(n) %>%
map_df(broom::tidy, .id="id")
data_law %>%
bootstrap(n)$strap
data_law %>%
bootstrap(n)$strap
a <- data_law %>%
bootstrap(n)$strap
data_law
bootstrap(data_law, n)
bootstrap(data_law, n)$strap
View(models)
View(models)
models
View(tidied)
boot
boot$strap
boot$strap %>% broom::tidy
boot$strap %>% broom::tidy()
broom::bootstrap(data_law, n)
data_law <- bootstrap::law
n <- 10
data_law %>%
bootstrap(n)
data_law <- bootstrap::law
n <- 10
data_law %>%
bootstrap(n)$strap
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% as_data_frame()
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap
example(jackknife)
example(jacknife)
example("bootstrap::jacknife")
example(bootstrap::jacknife)
example("bootstrap::jackknife")
x <- rnorm(20)
theta <- function(x){mean(x)}
jackknife(x, theta)
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n) %>%
jackknife()
data_law <- bootstrap::law
n <- 10
data_law %>%
bootstrap(n) %>%
jackknife(sd)
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% jackknife(sd)
boot$strap
boot$strap %>% as_vector()
boot$strap %>% as_data_frame()
boot$strap %>% as.list()
View(models)
models[[1]]
map_df(boot$strap, broom::tidy)
View(data_law)
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
model <- boot$strap %>%
map(~ lm(Lsat ~ GPA, data = .))
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
model <- boot$strap %>%
map(~ lm(LSAT ~ GPA, data = .))
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- boot$strap %>%
map(~ lm(LSAT ~ GPA, data = .))
tiddied <- models %>% map_df(broom::tidy, .id = "id")
tiddied
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
tiddied <- boot$strap %>% map_df(broom::tidy, .id = "id")
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
tiddied <- boot$strap %>%
as.list()
tiddied
tiddied %>% jackknife(sd)
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
tiddied <- boot$strap %>%
map(vector)
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
tiddied <- boot$strap %>%
map(as_vector)
data_law <- bootstrap::law
n <- 10
boot <- data_law %>%
bootstrap(n)
tiddied <- boot$strap %>%
map(as_vector)
tiddied %>% as_vector()
tiddied %>% as_lsit()
tiddied %>% map(as_vector)
tiddied
tiddied %>% mean()
tiddied %>% map(mean)
tiddied[1]
tiddied[[1]]
tiddied[[1]]resample_bootstrap(mtcars)
resample_bootstrap(mtcars)
a <- resample_bootstrap(mtcars)
a
as.integer(a)
as.data.frame(a)
tiddied
tiddied %>% as_data_frame()
tiddied %>% as.data.frame()
tiddied %>% as.data.frame() %>% jackknife(mean())
tiddied %>% as.data.frame() %>% jackknife(mean)
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
data_law
boot$strap
boot$strap %>% jackknife(mean)
jackknife(rnorm(10))
jackknife(rnorm(10), mean)
boot$strap %>% map_int()
boot$strap %>% map_dbl()
boot$strap %>% map(as_vector)
typeof(boot$strap)
list(1,23)
list(1,2,3) %>% map(as_vector)
list(1,list(2,3)) %>% map(as_vector)
boot$strap[[1]]
boot$strap[1]
boot$strap[[1]] %>% as_vector()
boot$strap[[1]] %>% as.vector()
boot$strap[[1]]$data
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied$std.error %>% jackknife()
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied$std.error %>% jackknife(std)
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied$std.error %>% jackknife(sd)
tidied$std.error
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied$std.error %>% jackknife(sd)
example_7_2 <- function(seed = 1012){
set.seed(1012)
# 加载所需函数
library(boot)
# 加载law数据集
library(bootstrap)
set.seed(1111)
r <- function(x, i) {
#want correlation of columns 1 and 2
cor(x[i,1], x[i,2])
}
boot.out <- boot(data = law,
statistic =r, R=2000)
# jackknife-after-bootstrap 估计 se(se)
A <- boot.array(boot.out)
theta.b <- boot.out$t
n <- NROW(law) # NROW和nrow的区别是前者生成的是一个n*1的矩阵
jack.se <- numeric(n)
for (i in 1:n) {
#在第i次重复中，用x[i]省略所有样本
keep <- which(A[, i] == 0)
jack.se[i] <- sd(theta.b[keep])
}
print(boot.out) #for se_boot
se.bar <- mean(jack.se)
se.se <- sqrt((n-1) * mean((jack.se - se.bar)^2))
print(paste("Jackknife-after-bootstrap est. se(se)=", se.se))
}
example_7_2()
n <- 1000
data_law <- as_data_frame(bootstrap::law)
n <- 1000
boot <- data_law %>%
bootstrap(n)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
jackknife <- bootstrap::jackknife
data_law <- as_data_frame(bootstrap::law)
n <- 1000
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
tidied$std.error %>% jackknife(sd)
data_law <- as_data_frame(bootstrap::law)
n <- 1000
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied$std.error %>% jackknife(mean)
jknf$jack.se
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied$std.error %>% jackknife(mean)
jknf$jack.se
data_law <- as_data_frame(bootstrap::law)
n <- 100
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied$std.error %>% jackknife(mean)
jknf$jack.se
data_law <- as_data_frame(bootstrap::law)
n <- 1000
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied$std.error %>% jackknife(mean)
jknf$jack.se
data_law <- as_data_frame(bootstrap::law)
n <- 1000
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied$std.error %>% jackknife(mean)
result <- jknf$jack.se
result
tinytex::reinstall_tinytex()
tidied
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied$std.error %>% jackknife(mean)
result <- jknf$jack.se
result
tidied
tidied$std.error
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied %>% filter(term == GPA)$std.error %>% jackknife(mean)
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- filter(tidied, term == GPA)$std.error %>% jackknife(mean)
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- filter(tidied, term == "GPA")$std.error %>% jackknife(mean)
result <- jknf$jack.se
result
View(data_law)
bootstrap::law
tidied
models
models[[0]]$corr
models[[0]]
models[[1]]
squared
models[[1]] %>% summary()
summary(models[[1]])
summary(models[[1]])$rsquared
summary(models[[1]])$r-squared
summary(models[[1]])$rsquared
cor(boot$strap[[1]])
cor(data_law)
summary(models[[1]])
cor(data_law)
tidied[[1]]
View(jknf)
View(models)
models[[1]]
tidied
bootstrap()
boot$strap
boot$strap[[1]]
cor(boot$strap[[1]])
cor(boot)
cor(boot[[1]])
boot[[1]]
boot
boot$strap[[1]]
boot$strap[[1]] %>% as.matrix()
boot$strap[[1]] %>% as_tibble()
boot$strap[[1]] %>% as_tibble() %>% cor()
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble) %>% cor()
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble)
#
# jknf <- filter(tidied, term == "GPA")$std.error %>% jackknife(mean)
#
# result <- jknf$jack.se
#
# result
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble)
r <- function(tib) return cor(tib(:, 1), tib(:, 2))
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble)
r <- function(tib) return cor(tib(, 1), tib(, 2))
correlate(mtcars)
install.packages("corrr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
library(corrr)
jackknife <- bootstrap::jackknife
version
install.packages(c("dplyr", "magrittr", "tibble", "tinytex"))
