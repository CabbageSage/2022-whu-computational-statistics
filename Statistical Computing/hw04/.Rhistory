result <- jknf$jack.se
result
tidied
tidied$std.error
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- tidied %>% filter(term == GPA)$std.error %>% jackknife(mean)
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- filter(tidied, term == GPA)$std.error %>% jackknife(mean)
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
models <- map(boot$strap, ~ lm(LSAT ~ GPA, data = .))
tidied <- map_df(models, broom::tidy, .id = "id")
jknf <- filter(tidied, term == "GPA")$std.error %>% jackknife(mean)
result <- jknf$jack.se
result
View(data_law)
bootstrap::law
tidied
models
models[[0]]$corr
models[[0]]
models[[1]]
squared
models[[1]] %>% summary()
summary(models[[1]])
summary(models[[1]])$rsquared
summary(models[[1]])$r-squared
summary(models[[1]])$rsquared
cor(boot$strap[[1]])
cor(data_law)
summary(models[[1]])
cor(data_law)
tidied[[1]]
View(jknf)
View(models)
models[[1]]
tidied
bootstrap()
boot$strap
boot$strap[[1]]
cor(boot$strap[[1]])
cor(boot)
cor(boot[[1]])
boot[[1]]
boot
boot$strap[[1]]
boot$strap[[1]] %>% as.matrix()
boot$strap[[1]] %>% as_tibble()
boot$strap[[1]] %>% as_tibble() %>% cor()
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble) %>% cor()
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble)
#
# jknf <- filter(tidied, term == "GPA")$std.error %>% jackknife(mean)
#
# result <- jknf$jack.se
#
# result
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble)
r <- function(tib) return cor(tib(:, 1), tib(:, 2))
data_law <- as_data_frame(bootstrap::law)
n <- 10
boot <- data_law %>%
bootstrap(n)
boot$strap %>% map(as_tibble)
r <- function(tib) return cor(tib(, 1), tib(, 2))
correlate(mtcars)
install.packages("corrr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
library(corrr)
jackknife <- bootstrap::jackknife
version
install.packages(c("dplyr", "magrittr", "tibble", "tinytex"))
r_mu
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
library(corrr)
jackknife <- bootstrap::jackknife
data_law <- as_tibble(bootstrap::law)
# Bootstrap
n <- 100
boot <- data_law %>%
bootstrap(n)
grp_boot <- boot$strap %>% map(as_tibble)
# define function of R
r <- function(tib, col1=1, col2=2) {
return(cor(tib[, col1], tib[, col2])[[1]])
}
# jackknife
r_boot <-  grp_boot %>% map_dbl(r)
jknf <- r_boot %>% jackknife(mean)
#result
jknf$jack.se
r_mu <- r(data_law)
r_mu <- r(data_law)
r_mu
# bootstrap again
boot_grp_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
}
grp_boot_grp_boot <- list()
sd_r_boot <- list()
for (i in 1:n){
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble)
sd_r_boot <- grp_boot_grp_boot[[i]] %>% map_dbl(r) %>% sd()
}
sd_r_boot
grp_boot_grp_boot
# bootstrap again
boot_grp_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
}
grp_boot_grp_boot <- list()
sd_r_boot <- list()
for (i in 1:n){
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble)
}
for (i in 1:n){
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>% map_dbl(r) %>% sd()
}
sd_r_boot
data_law <- as_tibble(bootstrap::law)
# Bootstrap
n <- 10
boot <- data_law %>%
bootstrap(n)
grp_boot <- boot$strap %>% map(as_tibble)
# define function of R
r <- function(tib, col1=1, col2=2) {
return(cor(tib[, col1], tib[, col2])[[1]])
}
# jackknife
r_boot <-  grp_boot %>% map_dbl(r)
jknf <- r_boot %>% jackknife(mean)
#result
jknf$jack.se
r_mu <- r(data_law)
r_mu
# bootstrap again
boot_grp_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
}
grp_boot_grp_boot <- list()
sd_r_boot <- list()
for (i in 1:n){
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble)
}
for (i in 1:n){
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>% map_dbl(r) %>% sd()
}
boot_grp_boot
grp_boot_grp_boot
sd_r_boot
t_boot <- (r_boot - r_mu) / sd_r_boot
grp_boot_grp_boot[[1]]
grp_boot_grp_boot[[i]] %>% map_dbl(r) %>% sd()
# bootstrap again
boot_grp_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
}
grp_boot_grp_boot <- list()
sd_r_boot <- list()
for (i in 1:n){
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble)
}
for (i in 1:n){
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>%
map_dbl(r) %>%
sd() %>%
as_vector()
}
sd_r_boot
sd_r_boot %>% as_vector()
# bootstrap again
boot_grp_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
}
grp_boot_grp_boot <- list()
sd_r_boot <- list()
for (i in 1:n){
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble)
}
for (i in 1:n){
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>%
map_dbl(r) %>%
sd()
}
sd_r_boot <- sd_r_boot %>% as_vector()
# bootstrap again
boot_grp_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
}
grp_boot_grp_boot <- list()
sd_r_boot <- list()
for (i in 1:n){
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble)
}
for (i in 1:n){
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>%
map_dbl(r) %>%
sd()
}
sd_r_boot <- sd_r_boot %>% as_vector()
sd_r_boot
t_boot <- (r_boot - r_mu) / sd_r_boot
alpha <- 0.05
Qt <- quantile(t_boot, c(alpha/2, 1-alpha/2), type = 1)
t_boot
# bootstrap for every sample
boot_grp_boot <- list()
grp_boot_grp_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble)
}
sd_r_boot <- list()
for (i in 1:n){
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>%
map_dbl(r) %>%
sd()
}
sd_r_boot <- sd_r_boot %>% as_vector()
sd_r_boot
boot_grp_boot
grp_boot_grp_boot
# bootstrap for every sample
boot_grp_boot <- list()
grp_boot_grp_boot <- list()
sd_r_boot <- list()
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>% map(as_tibble) # convert to tibble
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>%
map_dbl(r) %>%
sd()
}
sd_r_boot <- sd_r_boot %>% as_vector()
sd_r_boot
# bootstrap for every sample
boot_grp_boot <- list()
grp_boot_grp_boot <- list()
sd_r_boot <- numeric(0)
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>%
map(as_tibble) # convert to tibble
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>%
map_dbl(r) %>%
sd()
}
# sd_r_boot <- sd_r_boot %>% as_vector()
sd_r_boot
# bootstrap for every sample
boot_grp_boot <- list()
grp_boot_grp_boot <- list()
sd_r_boot <- numeric(0)
for (i in 1:n){
boot_grp_boot[i] <- bootstrap(grp_boot[i] %>% as.data.frame(), n)
grp_boot_grp_boot[[i]] <- boot_grp_boot[[i]] %>%
map(as_tibble) # convert to tibble
sd_r_boot[[i]] <- grp_boot_grp_boot[[i]] %>%
map_dbl(r) %>%
sd()
}
sd_r_boot
data_air <- boot::aircondit
data_air
data_air
data_air <- boot::aircondit %>% as_tibble()
data_air
data_air
data_air %>% diff()
install.packages("lubridate")
install.packages("lubridate")
install.packages(c("httr", "tibble"))
diff(data_air)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(modelr)
library(corrr)
jackknife <- bootstrap::jackknife
data_air <- boot::aircondit
roll(data_air)
diff(data_air)
data_air <- boot::aircondit %>% as_vector()
data_air
data_air %>% diff()
data_air <- boot::aircondit
vec_time_diff <- data_air %>%
as_vector() %>%
diff()
data_air <- boot::aircondit
vec_time_diff <- data_air %>%
as_vector() %>%
diff()
vec_time_diff
data_air <- boot::aircondit
vec_time_diff <- data_air %>%
as_vector() %>%
diff()
vec_time_diff
boot::aircondit
vec_time_diff[[1]]
MLE_lambda <- 1 / mean(vec_time_diff)
MLE_lambda
MLE_lambda <- 1 / mean(vec_time_diff)
bootstrap(vec_time_diff)
MLE_lambda <- 1 / mean(vec_time_diff)
bootstrap(vec_time_diff, 3)
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as.data.frame()
data_air <- boot::aircondit
vec_air_time_diff <- data_air %>%
as_vector() %>%
diff()
vec_air_time_diff
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as.data.frame()
bootstrap(vec_time_diff, 3)
data_air_time_diff
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as_data_frame()
bootstrap(vec_time_diff, 3)
data_air_time_diff
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as_tibble()
bootstrap(vec_time_diff, 3)
data_air_time_diff
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as_tibble()
bootstrap(vec_time_diff, 3)
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as_tibble()
bootstrap(data_air_time_diff, 3)
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as_tibble()
bootstrap(data_air_time_diff, 3)$strap
MLE_lambda <- 1 / mean(vec_time_diff)
data_air_time_diff <- vec_air_time_diff %>%
as_tibble()
bootstrap(data_air_time_diff, 3)$strap %>% map(as_tibble)
install.packages("boot")
install.packages("boot")
MLE_lambda <- 1 / mean(vec_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, function(x) 1 / mean(x), 3)
boot::boot()
data_law <- as_tibble(bootstrap::law)
# Bootstrap
n <- 10
boot_ <- data_law %>%
bootstrap(n)
grp_boot <- boot_$strap %>% map(as_tibble)
# define function of R
r <- function(tib, col1=1, col2=2) {
return(cor(tib[, col1], tib[, col2])[[1]])
}
# jackknife
r_boot <-  grp_boot %>% map_dbl(r)
jknf <- r_boot %>% jackknife(mean)
#result
jknf$jack.se
MLE_lambda <- 1 / mean(vec_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, function(x) 1 / mean(x), 3)
MLE_exp <- function(data){
return(1 / mean(data))
}
MLE_lambda <- MLE_exp(vec_air_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, function(x) 1 / mean(x), 3)
MLE_exp <- function(data){
return(1 / mean(data))
}
MLE_lambda <- MLE_exp(vec_air_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, MLE_exp(), 3)
MLE_exp <- function(data){
return(1 / mean(data))
}
MLE_lambda <- MLE_exp(vec_air_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, MLE_exp, 3)
MLE_exp <- function(data, i){
return(1 / mean(data[[i]]))
}
MLE_lambda <- MLE_exp(vec_air_time_diff)
MLE_exp <- function(data, i){
return(1 / mean(data[[i]]))
}
# MLE_lambda <- MLE_exp(vec_air_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, MLE_exp, 3)
boot::bootlm(mpg ~ wt, data = resample_bootstrap(mtcars))
lm(mpg ~ wt, data = resample_bootstrap(mtcars))
MLE_exp <- function(data, i){
return(1 / mean(data[[i]]))
}
# MLE_lambda <- MLE_exp(vec_air_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, MLE_exp, 3)
MLE_exp <- function(data, i){
return(1 / mean(data[i]))
}
# MLE_lambda <- MLE_exp(vec_air_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, MLE_exp, 3)
MLE_exp <- function(data, i){
return(1 / mean(data[i]))
}
MLE_lambda <- MLE_exp(vec_air_time_diff, .)
MLE_exp <- function(data, i){
return(1 / mean(data[i]))
}
MLE_lambda <- 1 / mean(vec_air_time_diff)
# MLE_lambda <- MLE_exp(vec_air_time_diff)
#
# data_air_time_diff <- vec_air_time_diff %>%
#   as_tibble()
#
# bootstrap(data_air_time_diff, 3)$strap %>%
#   map(as_tibble)
boot::boot(vec_air_time_diff, MLE_exp, 3)
MLE_exp <- function(data, i){
return(1 / mean(data[i]))
}
MLE_lambda <- 1 / mean(vec_air_time_diff)
MLE_lambda
boot::boot(vec_air_time_diff, MLE_exp, 3)
MLE_exp <- function(data, i){
return(1 / mean(data[i]))
}
boot::boot(vec_air_time_diff, MLE_exp, 3)
